version: '3.9'

services:
  genio_redis:
    container_name: genio_redis
    image: redis:alpine
    ports:
      - "6379:6379"

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d database"]
      interval: 10s
      timeout: 5s
      retries: 5

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

  now_ingestor:
    build: ./now_ingestor
    volumes:
      - ./shared:/app/shared
    ports:
      - "8001:8000"
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: user
      PGPASSWORD: password
      PGDATABASE: database
      REDIS_HOST: genio_redis
      REDIS_PORT: 6379
      NOW_CHANNEL: "now_channel"
    depends_on:
      genio_redis:
        condition: service_started
      postgres:
        condition: service_healthy

  express_emitter:
    build: ./express_emitter
    volumes:
      - ./shared:/app/shared
    ports:
      - "8002:8000"
    environment:
      - PYTHONPATH=/app:/app/shared
      - REDIS_HOST=genio_redis
      - REDIS_PORT=6379
      - NOW_CHANNEL=now_channel
      - EXPRESS_CHANNEL=express_channel
    depends_on:
      genio_redis:
        condition: service_started

  interpret_service:
    build: ./interpret_service
    volumes:
      - ./shared:/app/shared
    ports:
      - "8003:8000"
    environment:
      REDIS_HOST: genio_redis
      REDIS_PORT: 6379
      EXPRESS_CHANNEL: "express_channel"
      INTERPRET_CHANNEL: "interpret_channel"
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: user
      PGPASSWORD: password
      PGDATABASE: database
    depends_on:
      genio_redis:
        condition: service_started

  reflect_service:
    build: ./reflect_service
    volumes:
      - ./shared:/app/shared
    ports:
      - "8004:8000"
    environment:
      REDIS_HOST: genio_redis
      REDIS_PORT: 6379
      INTERPRET_CHANNEL: "interpret_channel"
      REFLECT_CHANNEL: "reflect_channel"
    depends_on:
      genio_redis:
        condition: service_started

  visualize_service:
    build: ./visualize_service
    volumes:
      - ./shared:/app/shared
      - ./visualize_service/visualizations:/app/visualizations
    ports:
      - "8008:8000"
    environment:
      REDIS_HOST: genio_redis
      REDIS_PORT: 6379
      REFLECT_CHANNEL: "reflect_channel"
      VISUALIZE_CHANNEL: "visualize_channel"
    depends_on:
      genio_redis:
        condition: service_started

  embed_memory_service:
    build: ./embed_memory_service
    volumes:
      - ./shared:/app/shared
    ports:
      - "8005:8000"
    environment:
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: user
      PGPASSWORD: password
      PGDATABASE: database
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333
      REDIS_HOST: genio_redis
      REDIS_PORT: 6379
      VISUALIZE_CHANNEL: "visualize_channel"
      EMBED_CHANNEL: "embed_channel"
    depends_on:
      genio_redis:
        condition: service_started
      qdrant:
        condition: service_started
      postgres:
        condition: service_healthy

  replay_memory_service:
    build: ./replay_memory_service
    volumes:
      - ./shared:/app/shared
      - ./memory_log.jsonl:/app/memory_log.jsonl
    ports:
      - "8006:8000"
    environment:
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333
      REDIS_HOST: genio_redis
      REDIS_PORT: 6379
      EMBED_CHANNEL: "embed_channel"
      REPLAY_CHANNEL: "replay_channel"
    depends_on:
      genio_redis:
        condition: service_started
      qdrant:
        condition: service_started

  memory_replay_viewer_service:
    build: ./memory_replay_viewer_service
    volumes:
      - ./shared:/app/shared
    ports:
      - "8007:8000"
    environment:
      REDIS_HOST: genio_redis
      REDIS_PORT: 6379
      REPLAY_CHANNEL: "replay_channel"
      MEMORY_REPLAY_CHANNEL: "memory_replay_channel"
    depends_on:
      genio_redis:
        condition: service_started

volumes:
  postgres_data:
  qdrant_data:
